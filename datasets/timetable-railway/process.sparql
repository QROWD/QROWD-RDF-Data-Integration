LOAD <dcat.ttl>

PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dcat: <http://www.w3.org/ns/dcat#>
PREFIX qrowd-vocab: <http://qrowd-project.eu/vocab/>
INSERT {
?distribution
  qrowd-vocab:workload ?sourceString ;
  dcat:accessURL ?distribution ;
  qrowd-vocab:resultGraph ?distribution .
}
WHERE {
  ?distribution dct:isFormatOf ?sourceDistribution .
  ?sourceDistribution dcat:downloadURL ?sourceFile .
  ?sourceFile url:text ?source .
  BIND(STRDT(?source, xsd:json) AS ?sourceString)
}

# Create stops
INSERT {
  GRAPH ?x { ?s a qrowd-vocab:Stop; qrowd-vocab:stopId ?i }
}
# SELECT ?stops
WHERE {
  ?x qrowd-vocab:workload ?o .
  BIND(json:path(?o, "$.stopIds") AS ?stops)
  ?stops json:unnest (?stop ?i)
  BIND("http://qrowd-project.eu/resource/" AS ?ns)
  BIND(URI(CONCAT(?ns, 'stop-', ENCODE_FOR_URI(?stop))) AS ?s)
}

# Add stop labels
INSERT {
  GRAPH ?x { ?s rdfs:label ?l }
}
# SELECT ?s ?i ?l
WHERE {
  ?x qrowd-vocab:workload ?o  .
  BIND(json:path(?o, "$.stopNames") AS ?stopNames)
  ?stopNames json:unnest (?l ?i) .
  GRAPH ?x { ?s qrowd-vocab:stopId ?i }
}

# A trip is a sequence of stops served at certain times
INSERT {
  GRAPH ?x {
    ?trip
      a qrowd-vocab:Trip ;
      qrowd-vocab:serves ?service ;
      .

    ?service
      qrowd-vocab:stop ?stop ;
      qrowd-vocab:atTime ?time ;
     .
  }
}
# SELECT ?tripId ?stopId ?time ?trip ?service ?stop
WHERE {
  ?x qrowd-vocab:workload ?o .
  BIND(json:path(?o, "$.trips") AS ?trips)
  ?trips json:unnest (?tripJson ?i) .
  BIND(json:path(?tripJson, "$.tripId") AS ?tripId)
  # NOTE If unnesting the stopTimes yeld an empty array, we would not get the triples for the trip 
  BIND(json:path(?tripJson, "$.stopTimes") AS ?stopTimes)
  ?stopTimes json:unnest (?timeStr ?stopId) .
  FILTER(?timeStr != "")
  # Parse the time as xsd:time; inject seconds component
  BIND(xsd:time(CONCAT(?timeStr, ":00")) AS ?time)
  BIND("http://qrowd-project.eu/resource/" AS ?ns)
  BIND(URI(CONCAT(?ns, 'trip-', ?tripId)) AS ?trip)
  BIND(URI(CONCAT(?ns, 'service-', ?tripId, "-", ?timeStr)) AS ?service)
  GRAPH ?x { ?stop qrowd-vocab:stopId ?stopId }
} 

# Emit the triples
CONSTRUCT WHERE { GRAPH ?g { ?s ?p ?o } }
CONSTRUCT WHERE { ?s ?p ?o }
