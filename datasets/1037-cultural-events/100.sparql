PREFIX wgs: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX q: <http://qrowd-project.eu/ontology/>
PREFIX todo: <http://todo/>
CONSTRUCT {
  ?e
    a todo:Event ;
    q:id ?id ;
    rdfs:label ?name ;
    todo:DatePublished ?datePublished ;
    todo:DateModified ?dateModified ;
    todo:objectRemoteId ?objectRemoteId ;
    todo:nodeId ?nodeId ;
    todo:nodeRemoteId ?nodeRemoteId ;
    todo:fullUrl ?fullUrl ;
    todo:path  ?path  ;
    todo:link ?link ;
    .
}

{
  # url:text is a property function that fetches the content of subject URL and
  # makes it available as a SPARQL result set row via the object variable
  <100.json> url:text ?src .
  BIND(json:parse(?src) AS ?json) .
  BIND(json:path(?json, "$.nodes") AS ?events)

  # Unnest each item of the json array into its own SPARQL result set row
  ?events json:unnest ?event .

  # For each row, craft the values for the CONSTRUCT template
  BIND("http://qrowd-project.eu/resource/" AS ?ns)
  BIND(json:path(?event, "$.objectId") AS ?id)
  BIND(URI(CONCAT(?ns, ENCODE_FOR_URI(?id))) AS ?e)
  BIND(json:path(?event, "$.objectName") AS ?name)
  BIND(json:path(?event, "$.datePublished") AS ?datePublished)
  BIND(json:path(?event, "$.dateModified") AS ?dateModified)
  BIND(json:path(?event, "$.objectRemoteId") AS ?objectRemoteId)
  BIND(json:path(?event, "$.nodeId") AS ?nodeId)
  BIND(json:path(?event, "$.nodeRemoteId") AS ?nodeRemoteId)
  BIND(json:path(?event, "$.fullUrl") AS ?fullUrl)
  BIND(json:path(?event, "$.path") AS ?path )
  BIND(json:path(?event, "$.link") AS ?link )
}
